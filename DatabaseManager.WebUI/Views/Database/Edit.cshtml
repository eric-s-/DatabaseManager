@model DatabaseManager.WebUI.Models.EditViewModel

@{
    ViewBag.Title = "Edit " + Model.Nickname;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel">
    <div class="panel-heading" style="text-align: center;">
        <h2>Edit @Model.Nickname</h2>
    </div>
    @using (Html.BeginForm("Edit", "Database", FormMethod.Post, new { onsubmit = "verifyDates()" }))
    {
        <div class="panel-body form-total">
            <h3 style="margin-left: 5%;">Default Fields</h3>
            <hr />
            @Html.HiddenFor(m => m.LawsonDatabaseID)
            @Html.HiddenFor(m => m.AdditionalFields)

            <div class="block-form-inline">
                <label>Status on Server</label>
                @Html.TextBoxFor(m => m.OnServerStatus, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Database Status</label>
                @Html.DropDownListFor(m => m.DatabaseStatus, new SelectList(new[] { "Active", "Developed", "Inactive", "Not Developed", "Prospective" }), new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Platform</label>
                @Html.TextBoxFor(m => m.Platform, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Principal Investigator</label>
                @Html.TextBoxFor(m => m.PIName, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Nickname</label>
                @Html.TextBoxFor(m => m.Nickname, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Name</label>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Developer</label>
                @Html.TextBoxFor(m => m.Developer, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Study Title</label>
                @Html.TextAreaFor(m => m.StudyTitle, new { @class = "form-control", rows = 3 })
            </div>

            <div class="block-form-inline">
                <label>REB</label>
                @Html.TextBoxFor(m => m.REB, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Lawson Number</label>
                @Html.TextBoxFor(m => m.LawsonNumber, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>REB Expiry Date</label>
                <div class="form-group">
                    <div class="input-group date" id="REBExpiry">
                        @Html.TextBoxFor(m => m.REBExpiry, new { @class = "form-control", id = "REBExpiry" })
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>

            <div class="block-form-inline">
                <label>Lawson Approval Date</label>
                <div class="form-group">
                    <div class="input-group date" id="LawsonApprovalDate">
                        @Html.TextBoxFor(m => m.LawsonApprovalDate, new { @class = "form-control", id = "LawsonApprovalDate"  })
                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>

            <div class="block-form-inline">
                <label>Researcher</label>
                @Html.TextBoxFor(m => m.Researcher, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Invoice Contact</label>
                @Html.TextBoxFor(m => m.InvoiceContact, new { @class = "form-control" })
            </div>

            <div class="block-form-inline">
                <label>Invoice Contact Email</label>
                @Html.TextBoxFor(m => m.InvoiceContactEmail, new { @class = "form-control" })
            </div>
            
            <div style="clear: both;"></div>
            <h3 style="margin-left: 5%;">Custom Fields</h3>
            <hr />
            @foreach (KeyValuePair<string, string> kv in Model.AdditionalFieldsDictionary)
            {
                <div class="block-form-inline">
                    <label>@kv.Key</label>
                    <br />
                    <input type="text" name="@("Model.AdditionalFields["+kv.Key+"]")" value="@kv.Value" class="form-control" />
                </div>
            }
        </div>
        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Add Column", "AddColumn", new { Model.LawsonDatabaseID }, new { @class = "btn btn-default" })
            @Html.ActionLink("Cancel and return to List", "List", null, new { @class = "btn btn-default" })
        </div>
       
    }
</div>
<script type="text/javascript">
    function verifyDates() {
        $(".date > input").each(function () {
            var input = $(this).val();
            if (!isValidDate(input)) $(this).val("");
        });
    }

    function isValidDate(date) {
        var matches = /(\d{4})[-\/](\d{2})[-\/](\d{2})/.exec(date);
        if (matches == null) return false;
        var day = matches[3];
        var month = matches[2] - 1;
        var year = matches[1];
        var composedDate = new Date(year, month, day);
        return composedDate.getDate() == day &&
                 composedDate.getMonth() == month &&
                 composedDate.getFullYear() == year;
    }


    function dateFormatFixer(fieldName) {
        var betterDate = $(".form-control#" + fieldName).val().split(' ')[0];
        $(".form-control#" + fieldName).val(betterDate);
        $("#" + fieldName).val(betterDate);
        $("#" + fieldName).datetimepicker({
            format: 'YYYY/MM/DD',
            pickDate: true,
            pickTime: false,
            pick12HourFormat: false
        });
    };

    window.onload = dateFormatFixer("REBExpiry");
    window.onload = dateFormatFixer("LawsonApprovalDate");
</script>

